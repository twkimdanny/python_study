## 시행1 시작(개인작품)

# a = int(input("지불할 금액을 입력하세요 : "))

# value_1000 = int(a//1000) ## 입력값을 1,000으로 나눈 몫

# value_100 = int((a%1000)//100) ## 입력값을 1,000으로 나눈 버림(a%1000)을 다시 100으로 나눈 값

# value_10 = int(((a%1000)%100)//10) ## 입력값을 1,000으로 나눈 버림을 다시 100으로 나눈 값의 버림

# print(a, "원을 게산하려면")
# print("1000원 지폐", value_1000, "장")
# print("500원 동전", value_100, "개")
# print("100원 동전", value_10, "개가 필요합니다")

## 시행1 종료
    ## 시행2 시작

# b = (input("지불할 금액을 입력하세요 :"))

# value_1000b = int(b[0]) ## 입력금액의 1,000단위 금액 슬라이스
# value_100b = int(b[1]) ## 입력금액의 100단위 금액 슬라이스
# value_10b = int(b[2]) ## 입력금액의 10단위 금액 슬라이스
    
# print(b, "원을 게산하려면")
# print("1000원 지폐", value_1000b, "장")
# print("500원 동전", value_100b, "개")
# print("100원 동전", value_10b, "개가 필요합니다")

## 시행2 종료 
## 시행2는 시행1과 같은 금액이 나오지만, 사실상 1,000단위 금액에서만 사용 가능하고, 변수 사용이 많아 실제로는 사용하기 어려움

## 시행3 시작(chatGPT 작성)
amount = int(input("지불할 금액을 입력하세요: "))

thousands = amount // 1000 ## 입력값을 1,000으로 나눈 몫
hundreds = (amount % 1000) // 100 ## 입력값을 1,000으로 나눈 버림을 다시 100으로 나눈 값
tens = (amount % 100) // 10 ## 입력값을 100으로 나눈 후 버림을 10으로 나눈 값

print(f"{amount}원을 계산하려면") ## f-strig을 활용한 출력
print(f"1000원 지폐 {thousands}장")
print(f"100원 동전 {hundreds}개")
print(f"10원 동전 {tens}개가 필요합니다")

## 시행3 종료
## 시행3은 시행1과 유사하지만 10단위 금액을 나누는 방법에서 시행1보다 간결하게 작성되었음(사실상 시행1이 오류)
## 위 계산방법은 교재에서도 정석으로 인정하는 방법임

    ## 시행4 시행(ChatGPT 작성2)

# amount = int(input("지불할 금액을 입력하세요: "))
# thousands, remainder = divmod(amount, 1000) ## 입력된 값(amount)을 내장함수(divmod)를 활용해 몫인 천단위 변수(thousands)와 버림단위 변수(remainder)로 저장
# hundreds, tens = divmod(remainder, 100) ## 이전 단계에서 버림단위 금액을 다시 내장함수(divmod)를 사용해 백단위 금액(hundreds)와 십단위 금액(tens)로 저장
# tens = tens // 10 ## 10단위 금액을 10으로 나누어 몇장의 동전인지 계산함

# print(f"{amount}원을 계산하려면")
# print(f"1000원 지폐 {thousands}장")
# print(f"100원 동전 {hundreds}개")
# print(f"10원 동전 {tens}개가 필요합니다")

            ## 시행 4 종료
## 시행4는 파이썬 자체 내장함수를 사용(divamod)
## 입력된 함수의 두수에 대한 몫과 나머지를 함께 계산해주는 방법